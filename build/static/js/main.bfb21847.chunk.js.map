{"version":3,"sources":["components/Input.js","components/List.js","Todolist.js","index.js"],"names":["Todoinput","Input","e","keyCode","target","value","alert","props","add","onKeyDown","this","placeholder","Component","List","ing","end","TodoArray","map","item","idx","Isdo","id","class","draggable","type","onClick","remove","onchange","href","del","Todolist","shan","tempTodo","state","setState","data","TodoNode","splice","todo","JSON","parse","localStorage","getItem","setItem","stringify","for","ReactDOM","render","document","getElementById"],"mappings":"iNAGqBA,E,2MAQjBC,MAAQ,SAACC,GACY,KAAdA,EAAEC,UACqB,KAAnBD,EAAEE,OAAOC,MACRC,MAAM,iCAGN,EAAKC,MAAMC,IAAIN,EAAEE,OAAOC,OACxBH,EAAEE,OAAOC,MAAQ,M,wEAbzB,OACI,gCACI,2BAAOI,UAAaC,KAAKT,MAAOU,YAAY,0B,GAJrBC,aCAlBC,E,iLACP,IAAD,OACDC,EAAM,EACNC,EAAM,EACLC,EAAaN,KAAKH,MAAlBS,UACL,OACI,6BACKA,EAAUC,KAAI,SAACC,EAAKC,GACjB,OAAiB,IAAdD,EAAKE,MACJN,IAEI,wBAAIO,GAAG,WAAWC,MAAM,YACpB,wBAAIC,UAAU,QACV,2BAAOC,KAAK,WAAYC,QAAS,kBAAI,EAAKlB,MAAMmB,OAAOP,IAAMQ,SAAS,0BACtE,2BAAIT,EAAKb,OACT,uBAAGuB,KAAK,uBAAuBH,QAAS,kBAAI,EAAKlB,MAAMsB,IAAIV,KAA3D,QAKT,MAEX,uDAAS,8BAAOL,IACfE,EAAUC,KAAI,SAACC,EAAKC,GACjB,OAAiB,IAAdD,EAAKE,MACJL,IAEI,wBAAIM,GAAG,WAAWC,MAAM,YACpB,wBAAIC,UAAU,QACV,2BAAOC,KAAK,WAAYC,QAAS,kBAAI,EAAKlB,MAAMmB,OAAOP,IAAMQ,SAAS,0BACtE,2BAAIT,EAAKb,OACT,uBAAGuB,KAAK,uBAAuBH,QAAS,kBAAI,EAAKlB,MAAMsB,IAAIV,KAA3D,QAKT,MAEX,uDAAQ,8BAAOJ,S,GAtCGH,aCIbkB,E,YAgBjB,aAAc,IAAD,uBACT,+CAaJC,KAAO,SAACZ,GACJ,IAAIa,EAAQ,YAAO,EAAKC,MAAMjB,WAC9BgB,EAASb,GAAKC,KAAOY,EAASb,GAAKC,KAAO,EAAI,EAC9C,EAAKc,SAAS,CACVlB,UAAUgB,KAlBL,EAqBbxB,IAAM,SAAC2B,GACH,IAAIC,EAAW,CAAC,MAAQD,EAAK,KAAO,GACpC,EAAKD,SAAS,CACVlB,UAAU,GAAD,mBAAM,EAAKiB,MAAMjB,WAAjB,CAA2BoB,OAxB/B,EA2BbP,IAAM,SAACV,GACH,IAAIa,EAAQ,YAAO,EAAKC,MAAMjB,WAC9BgB,EAASK,OAAOlB,EAAI,GACpB,EAAKe,UAAS,SAACD,EAAM1B,GACjB,MAAO,CACHS,UAAWgB,OA9BnB,IAAIM,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAFlC,OAIL,EAAKT,MADG,OAATK,EACc,CACTtB,UAAU,IAID,CACTA,UAAUsB,GAVT,E,sEAZT,OADAG,aAAaE,QAAQ,OAAQJ,KAAKK,UAAUlC,KAAKuB,MAAMjB,YAEnD,gCACI,iCACI,6BACI,2BAAO6B,IAAI,SAAX,YACA,kBAAC,EAAD,CAAOrC,IAAKE,KAAKF,MACjB,kBAAC,EAAD,CAAMqB,IAAKnB,KAAKmB,IAAKH,OAAQhB,KAAKqB,KAAMf,UAAWN,KAAKuB,MAAMjB,mB,GAVhDJ,a,MCGtCkC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.bfb21847.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\n\nexport default class Todoinput extends Component {\n    render() {\n        return (\n            <header>\n                <input onKeyDown = {this.Input} placeholder=\"添加ToDo\"></input>\n            </header>\n        )\n    }\n    Input = (e)=>{\n        if(e.keyCode === 13){\n            if(e.target.value === \"\"){\n                alert(\"请输入Todo！\");\n            }\n            else{\n                this.props.add(e.target.value);\n                e.target.value = '';\n            }     \n        }\n    }\n}\n","import React, { Component } from 'react'\r\n\r\n\r\nexport default class List extends Component {\r\n    render() {\r\n        let ing = 0;\r\n        let end = 0;\r\n        var {TodoArray} = this.props;\r\n        return (\r\n            <div>\r\n                {TodoArray.map((item,idx) => {\r\n                    if(item.Isdo === 0){\r\n                        ing++;\r\n                        return(\r\n                            <ol id=\"todolist\" class=\"demo-box\">\r\n                                <li draggable=\"true\">\r\n                                    <input type=\"checkbox\"  onClick={()=>this.props.remove(idx)} onchange=\"update(2,&quot;done&quot;,true)\"></input>\r\n                                    <p>{item.value}</p>\r\n                                    <a href=\"javascript:remove(2)\" onClick={()=>this.props.del(idx)}>-</a>\r\n                                </li>\r\n                            </ol>\r\n                        )\r\n                    }\r\n                    return \"\";\r\n                })}\r\n                <h2 >正在进行<span>{ing}</span></h2>                \r\n                {TodoArray.map((item,idx) => {\r\n                    if(item.Isdo === 1){\r\n                        end++;\r\n                        return(\r\n                            <ol id=\"todolist\" class=\"demo-box\">\r\n                                <li draggable=\"true\">\r\n                                    <input type=\"checkbox\"  onClick={()=>this.props.remove(idx)} onchange=\"update(2,&quot;done&quot;,true)\"></input>\r\n                                    <p>{item.value}</p>\r\n                                    <a href=\"javascript:remove(2)\" onClick={()=>this.props.del(idx)}>-</a>\r\n                                </li>\r\n                            </ol>\r\n                        )\r\n                    }\r\n                    return \"\";\r\n                })} \r\n                <h2>已经完成<span>{end}</span></h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\nimport Input from './components/Input'\nimport List from './components/List'\n\n\n\n\nexport default class Todolist extends Component {\n\n    render() {\n        localStorage.setItem('todo', JSON.stringify(this.state.TodoArray));\n        return (\n            <header>\n                <section>\n                    <div>\n                        <label for=\"title\">ToDoList</label>\n                        <Input add={this.add} />\n                        <List del={this.del} remove={this.shan} TodoArray={this.state.TodoArray}/>\n                    </div>\n                </section>\n            </header>\n        )\n    }\n    constructor(){\n        super();\n        let todo = JSON.parse(localStorage.getItem('todo'));\n        if(todo === null){\n            this.state = {\n                TodoArray:[]\n            }\n        }\n        else{\n            this.state = {\n                TodoArray:todo\n            }\n        }\n    }\n    shan = (idx) =>{\n        let tempTodo = [...this.state.TodoArray];\n        tempTodo[idx].Isdo = tempTodo[idx].Isdo ? 0 : 1;\n        this.setState({\n            TodoArray:tempTodo\n        });\n    }\n    add = (data)=>{\n        var TodoNode = {\"value\":data,\"Isdo\":0};\n        this.setState({\n            TodoArray: [...this.state.TodoArray,TodoNode]\n        })\n    }\n    del = (idx)=>{\n        let tempTodo = [...this.state.TodoArray];\n        tempTodo.splice(idx,1);\n        this.setState((state,props)=>{\n            return {\n                TodoArray: tempTodo\n            }\n        });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Todolist from './Todolist';\nimport './index.css';\n// 容器组件 / UI组件（展示组件）\n// 智能组件 / 木偶组件\n\n// 容器组件（container/pages）：逻辑，功能\n// UI组件（components）：写成函数组件，展示，返回React元素\n\nReactDOM.render(\n    <Todolist />,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}